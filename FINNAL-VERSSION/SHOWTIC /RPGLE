        *************** Beginning of data *************************************
0001.00    dcl-f ticpf    disk keyed usage(*update : *output);                 
0002.00    dcl-f showlf03 disk keyed usage(*input);                            
0003.00    dcl-f subpf    disk keyed usage(*input);                            
0004.00    dcl-f hallpf   disk keyed usage(*input);                            
0005.00    dcl-f moviepf  disk keyed usage(*input);                            
0006.00    dcl-f cardlf01 disk keyed usage(*update : *output);                 
0007.00    dcl-f dshowtic workstn sfile(hlsfl:hrrn) sfile(cardsfl:crrn);       
0008.00                                                                        
0009.00    dcl-s hrrn packed(3);                                               
0010.00    dcl-s crrn packed(3);                                               
0011.00    dcl-s subidchar char(10);                                           
0011.01    dcl-s shidchar  char(10);                                           
0011.02    dcl-s countl packed(3);  //count lines                              
0011.03    dcl-s countp packed(3);  //count selected chairs                    
0012.00    dcl-s countcard packed(3); //count remainig in card                 
0013.00    dcl-s countd packed(3);  //count used to delete in ds   
0014.00    dcl-s countop packed(3);  //count to iterate op times   
0015.00    dcl-s countr  packed(3);  //count reserved chairs  
0015.01    dcl-s idx packed(2); 
0016.00                                                            
0017.00    dcl-ds date1;                                           
0018.00      y1 char(4);                                           
0018.01      m1 char(2);                                           
0018.02      d1 char(2);                                           
0019.00    end-ds;                                                 
0020.00    dcl-ds date2;                                           
0021.00      d2 char(2);                                           
0021.01      s1 char(1) inz('/');                                  
0022.00      m2 char(2);                                           
0022.01      s2 char(1) inz('/');                                  
0023.00      y2 char(4);                                           
0024.00    end-ds;                                                 
0024.01                      
0025.00    dcl-ds lineu;                        
0026.00       c1;                               
0027.00       c2;                               
0028.00       c3;                               
0029.00       c4;                               
0030.00       c5;                               
0031.00       c6;                               
0032.00       c7;                               
0033.00       c8;                               
0034.00       c9;                               
0035.00       c10;                              
0036.00      linearr like(c1) dim(10) pos(1);   
0037.00    end-ds;                              
0037.01                                         
0038.00    dcl-ds tickets;                      
0039.00       l1 char(2);   
0040.00       p1 char(2); 
0040.01       l2 char(2); 
0040.02       p2 char(2); 
0040.03       l3 char(2); 
0040.04       p3 char(2); 
0040.05       l4 char(2); 
0040.06       p4 char(2); 
0040.07       l5 char(2); 
0040.08       p5 char(2); 
0040.09       l6 char(2); 
0040.10       p6 char(2); 
0040.11       l7 char(2); 
0040.12       p7 char(2); 
0040.13       l8 char(2); 
0040.14       p8 char(2); 
0040.15       l9 char(2); 
0040.16       p9 char(2);                     
0040.17       l10 char(2);                    
0040.18       p10 char(2);                    
0049.00       ticarr like(l1) dim(20) pos(1); 
0050.00    end-ds;                            
0051.00                                           
0052.00    dcl-pi *n;                             
0053.00       subid packed(10);                   
0054.00       showid packed(10);                  
0055.00    end-pi;                                
0056.00                                           
0057.00    dcl-pr printcl extpgm;                 
0058.00       subidp char(10);                    
0059.00       showidp char(10);                   
0059.01       ticketsp likeds(tickets);           
0060.00    end-pi;                                
0061.00                                      
0062.00    exsr pgmstart;                    
0063.00      if %found;                      
0064.00         exsr fillsfl;                
0064.01         exfmt hallctl;               
0064.02         dow not(*in03);              
0064.03             if *in10 and countp > 0; 
0064.04                exsr buyticket;       
0064.05             else;                    
0064.06                exsr selectchair;     
0064.07             endif;                   
0064.08             exfmt hallctl;           
0064.09         enddo;                       
0064.10      endif;  
0065.00      *inlr=*on;                           
0066.00               

//THIS SR CHECKS IF THE GIVEN PARAMTERES ARE VALID AND DOES COMMANDS THAT ARE NECCESARY FOR THE START OF THE PGM       
0067.00    begsr pgmstart;                        
0068.00      chain subid rsub;                    
0069.00      if %found;                           
0070.00         chain showid rshow;               
0071.00         if %found;                        
0072.00            chain shhlid rhall;            
0073.00            if %found;                     
0074.00                chain shmvid moviepf;      
0075.00                if %found;                 
0076.00                    subidchar=%char(subid);
0077.00                    shidchar=%char(showid);
0078.00                    exsr datemove;         
0079.00                    countp = 0;            
0080.00                    write top;   
0081.00                    write bot;    
0082.00                endif;            
0083.00            endif;                
0084.00         endif;                   
0085.00      endif;                      
0086.00    endsr;                        
0087.00

//THIS SFL WRITES AND DISPLAY THE SFL AT THE START OF THE PGM 
0088.00    begsr fillsfl;                                                      
0088.01     *in32=on;                                                          
0088.02     write hallctl;                                                     
0088.03     hrrn=0;                                                            
0088.04     for countl = 1 by 1 to hllines; //hllines=Several rows in the hall 
0088.05       exsr inzline;                                                    
0088.06       hrrn+=1;                                                         
0088.07       line = countl;      //countl= count lines                        
0088.08       setll (showid:countl) rtic;                                      
0088.09       reade (showid:countl) rtic;                                      
0088.10       dow not(%eof(ticpf));                                            
0088.11          linearr(ticchair) = 'R';                                      
0088.12          reade (showid:countl) rtic;                                   
0088.14       enddo;                                                           
0088.15       write hlsfl;                                                     
0088.16     endfor;                                                            
0088.17     *in31=*on; 
0089.00    endsr;   
0090.00 
// THIS SR FILL THE SFL LINE WITH 'O' 
0091.00    begsr inzline;          
0091.02      for idx = 1 to %elem(linearr);
0091.03        linearr(idx) = 'O';         
0091.04      endfor;                                  
0092.00    endsr;  
0093.00
// THIS SR IS EXECUTED WHEN SELECTING A CHAIR, AND CHECKS IF THE GIVEN VALUES ARE VALID         
0094.00    begsr selectchair;                        
0094.01      if not(selpos = o) and not(selln = 0);  
0094.02         if cancel = *blanks or cancel = 'Y'; 
0094.03            chain swlln hlsfl;                
0094.04            if %found;                        
0094.05               if cancel='Y';                 
0094.06                  exsr docancel;              
0094.07               else;                          
0094.08                  if countp < 10 ;            
0094.09                     exsr roadd;               
0094.10                  else;                       
0094.11                     *in49=*on;                
0094.12                  endif;                      
0094.13               endif;     
0094.14            else;                                         
0094.15               *in47=*on;                                 
0094.16            endif;                                        
0094.17         else;                                            
0094.18           *in45=*on;                                     
0094.19         endif;                                           
0094.20      endif;                                              
0095.00    endsr;                                                
0096.00                   
/THIS SR SELECTS THE CHAIR IF ITS FREE, AND SEND AN ERROR IF NOT 
0097.00    begsr doadd;                             
0097.01      if linearr(selpos) = 'O';              
0097.02         count += 1;                         
0097.03         linerarr(selpos) = 'X';             
0097.04         ticarr(countp*2 - 1) = %char(selln); 
0097.05         ticarr(countp*2)= %char(selpos);    
0097.06         update hlsfl;                       
0097.07      else;                                  
0097.08         *in46=*on;                          
0097.09      endif;                                 
0098.00    endsr;     
0099.00               
//THIS SR CANCELS THE CHAIR IF ITS SELECTED, AND SEND AN ERROR IF NOT 
0100.00    begsr docancel;               
0100.01      if linearr(selpos) = 'X';   
0100.02         countp -=1;              
0100.03         linearr(selpos) = 'O';   
0100.04         exsr dltpurchase;        
0100.05         update hlsfl;            
0100.06      else;                       
0100.07         *in44=*on;               
0100.08      endif;                      
0101.00    endsr;                        
0102.00                                
//THIS SFL DISPLAYS THE CARD SFL, AND IF THE USER COMMITED, IT WILL RESERVE THE CHAIRS HE SELECTED FOR HIM                           
0103.00   begsr fillcardsfl;                  
0104.00     *in34=*on;                        
0105.00     write cardctl;                    
0106.00     *in34=*off;                       
0107.00     crrn=0;                           
0108.00     setll subid rcard;                
0109.00     reade subid rcard;                
0110.00     countcard = countp;               
0111.00     dow not(%eof(cardlf01));          
0112.00        if crdsts = 'A';               
0113.00            crrn+=1;                   
0114.00            balance = crdqty-crdused;  
0115.00            exsr docountcard;          
0116.00            write cardsfl;    
0117.00            *in40 = *off;       
0118.00        endif;                  
0119.00        reade subid rcard;      
0120.00    enddo;                      
0121.00    if crrn > 0;                
0122.00       *in31=*on;               
0123.00       *in32=*on;               
0124.00       *in33=*on;               
0125.00       pos=1;                   
0126.00    else;                       
0127.00       *in48=*on;               
0128.00    endif;                      
0129.00   endsr;                       
